description: Whether to include special case handling for sorting two elements using quicksort.
suite: phys-cost-models
benchmark: quicksort
name: special case handing
readonly: true
chart:
    x:
        scale: linear
        type: O
        label: 'Size of tuples [bytes]'
    y:
        scale: linear
        type: Q
        label: 'Machine code execution time [ms]'
data:
    'Distinct_multi_i32':
        file: 'benchmark/phys-cost-models/data/Distinct_multi_i32.csv'
        format: 'csv'
        delimiter: ','
        header: 1
        attributes:
            'id': 'INT NOT NULL'
            'n10': 'INT NOT NULL'
            'n100': 'INT NOT NULL'
            'n1000': 'INT NOT NULL'
            'n1000_sorted': 'INT NOT NULL'
            'n10000': 'INT NOT NULL'
            'n100000': 'INT NOT NULL'
            'n1000000': 'INT NOT NULL'
            '_n1000000': 'INT NOT NULL'
            '__n1000000': 'INT NOT NULL'
            '___n1000000': 'INT NOT NULL'
systems:
    mutable:
        args: >-
            --backend WasmV8
            --cardinality-estimator Injected
            --use-cardinality-file benchmark/phys-cost-models/data/cardinalities.json
            --data-layout Row
            --hard-pipeline-breaker-layout Row
            --sorting-implementations Quicksort
            --quicksort-cmp-selection-strategy Predicated
            --no-simd
        configurations:
            'w/o special case handling':
                args: --no-special-case-quicksort-two-elements
                pattern: '^Execute machine code:.*'
            'w/ special case handling':
                args: ''
                pattern: '^Execute machine code:.*'
        cases:
            4:  SELECT n10
                FROM Distinct_multi_i32 ORDER BY n10;
            8:  SELECT n10, n100
                FROM Distinct_multi_i32 ORDER BY n10;
            12: SELECT n10, n100, n1000
                FROM Distinct_multi_i32 ORDER BY n10;
            16: SELECT n10, n100, n1000, n10000
                FROM Distinct_multi_i32 ORDER BY n10;
            20: SELECT n10, n100, n1000, n10000, n100000
                FROM Distinct_multi_i32 ORDER BY n10;
            24: SELECT n10, n100, n1000, n10000, n100000, n1000000
                FROM Distinct_multi_i32 ORDER BY n10;
